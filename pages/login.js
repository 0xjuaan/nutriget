import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from 'next/styles/Home.module.css'
import login from 'next/styles/Login.module.css'

import {useState} from 'react';
import { useRouter } from 'next/router'

const inter = Inter({ subsets: ['latin'] })

//This is the login page for unauthenticated users
export default function Login() {
  const router = useRouter();
  const [formData, setFormdata] = useState({email: '', password:''})
  const [error, setError] = useState("");

  const [Hovering, setHovering] = useState(false);

  const handleMouseEnter = () => setHovering(true);
  const handleMouseLeave = () => setHovering(false);

  //This this changes the formData state when the user changes any of the input fields
  const handleChange = (event) => {
    setFormdata({ ...formData, [event.target.name]: event.target.value }); 
  }

  //This is the function that is called when the user submits the form
  const handleSubmit = async (event) => {
    event.preventDefault(); //Prevent the page from reloading
    const result = await fetch ('/api/login', {
      method: 'POST',
      body: JSON.stringify(formData),
      headers: { 'Content-Type': 'application/json'}
    });
    const data = await result.json();
    if (data.user) {
      router.push('/')
    }
    else {
      setError(data.response);
    }
  }
  
  return (
    <>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>

        <div className={styles.title}>
          <h1>
            Welcome Back
          </h1>
        </div>

        <form onSubmit={handleSubmit} className={login.form}>
            <input className={login.input}
            name="email"
            placeholder="Email"
            onChange={handleChange}
            />
            <input className={login.input}
            name="password"
            placeholder="Password"
            onChange={handleChange}
            />
            <button disabled={false} type="submit" className={login.submit}>
                Log in
            </button>
            <span className={`${login.error} ${Hovering ? login.error.visible : login.error.hidden}`}>
                {error}
              </span>

        </form>
      </main>
    </>
  )
}